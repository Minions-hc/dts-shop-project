<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiguliuxing.dts.db.dao.ProductMapper">


    <insert id="insertProduct" parameterType="com.qiguliuxing.dts.vo.ProductVO" useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO product (
            product_name,
            product_image,
            product_price,
            product_seriesid,
            product_levelid,
            created_by,
            created_time,
            updated_by,
            updated_time
        ) VALUES (
                     #{productName},
                     #{productImage},
                     #{productPrice},
                     #{productSeriesId},
                     #{productLevelId},
                     #{createdBy},
                     NOW(),
                     #{updatedBy},
                     NOW()
                 )
    </insert>


    <delete id="deleteProduct" parameterType="java.lang.Integer">
        DELETE FROM product
        WHERE product_id = #{productId}
    </delete>


    <update id="updateProduct" parameterType="com.qiguliuxing.dts.vo.ProductVO">
        UPDATE product
        SET
            product_image = #{productImage},
            product_name = #{productName    },
            product_price = #{productPrice},
            product_seriesid = #{productSeriesId},
            product_levelid = #{productLevelId},
            updated_by = #{updatedBy},
            updated_time = NOW()
        WHERE product_id = #{productId}
    </update>


    <select id="getProductById" parameterType="java.lang.Integer" resultType="com.qiguliuxing.dts.vo.ProductVO">
        SELECT
            p.product_id as productId,
            p.product_name AS productName,
            p.product_image AS productImage,
            p.product_price AS productPrice,
            p.product_seriesid AS productSeriesId,
            ps.series_name AS productSeriesName,
            p.product_levelid AS productLevelId,
            pl.level_name AS productLevelName,
            p.created_by AS createdBy,
            p.created_time AS createdTime,
            p.updated_by AS updatedBy,
            p.updated_time AS updatedTime
        FROM product p
        LEFT JOIN product_series ps ON p.product_seriesid = ps.series_id
        LEFT JOIN product_level pl ON p.product_levelid = pl.level_id
        WHERE p.product_id = #{productId}
    </select>


    <select id="selectAllProducts" resultType="com.qiguliuxing.dts.vo.ProductVO">
        SELECT
            product_id AS productId,
            product_name as productName,
            product_image AS productImage,
            product_price AS productPrice,
            product_seriesid as productSeriesId,
            product_levelid as productLevelId,
            created_by AS createdBy,
            created_time AS createdTime,
            updated_by AS updatedBy,
            updated_time AS updatedTime
        FROM product
    </select>


    <!-- 多条件动态查询 -->
    <select id="getProductsByCondition" parameterType="map" resultType="com.qiguliuxing.dts.vo.ProductVO">
        SELECT
        p.product_id as productId,
        p.product_name AS productName,
        p.product_image AS productImage,
        p.product_price AS productPrice,
        p.product_seriesid AS productSeriesId,
        ps.series_name AS productSeriesName,
        p.product_levelid AS productLevelId,
        pl.level_name AS productLevelName,
        p.created_by AS createdBy,
        p.created_time AS createdTime,
        p.updated_by AS updatedBy,
        p.updated_time AS updatedTime
        FROM product p
        LEFT JOIN product_series ps ON p.product_seriesid = ps.series_id
        LEFT JOIN product_level pl ON p.product_levelid = pl.level_id
        WHERE 1=1
        <if test="productId != null">
            AND p.product_id = #{productId}
        </if>
        <if test="productName != null and productName != ''">
            AND p.product_name LIKE CONCAT('%', #{productName}, '%')
        </if>
        <if test="productSeriesId != null">
            AND p.product_seriesid = #{productSeriesId}
        </if>
        <if test="productLevelId != null">
            AND p.product_levelid = #{productLevelId}
        </if>
        ORDER BY p.product_id
    </select>

</mapper>